import streamlit as st
import os
from PIL import Image

# Configura√ß√£o do Streamlit
st.set_page_config(page_title="Dashboard - An√°lise e Modelos", layout="wide")

# Diret√≥rios de sa√≠da
OUTPUT_DIR = "./out"

# Se√ß√µes do Dashboard
st.title("Dashboard de An√°lise de Dados e Modelos")
st.markdown("### Uma vis√£o centralizada dos resultados")

# 1. An√°lise dos Dados
st.header("üìä An√°lise dos Dados")
st.subheader("Distribui√ß√£o das Dura√ß√µes dos √Åudios")
durations_img_path = os.path.join(OUTPUT_DIR, "data_loading", "duracao_audios.png")

if os.path.exists(durations_img_path):
    st.image(durations_img_path, caption="Distribui√ß√£o das Dura√ß√µes dos √Åudios")
else:
    st.warning("Gr√°fico de distribui√ß√£o das dura√ß√µes n√£o encontrado.")

# 2. Modelos
st.header("üß† Resultados dos Modelos")
model_tabs = st.tabs(["√Årvore de Decis√£o", "SVM", "CNN"])

# Fun√ß√£o para carregar m√©tricas e gr√°ficos
def display_model_results(model_name, conf_matrix_file, scatter_plot_file, metrics_text):
    st.subheader(f"Matriz de Confus√£o - {model_name}")
    if os.path.exists(conf_matrix_file):
        st.image(conf_matrix_file)
    else:
        st.warning(f"Matriz de Confus√£o do {model_name} n√£o encontrada.")

    st.subheader(f"Gr√°fico de Dispers√£o - {model_name}")
    if os.path.exists(scatter_plot_file):
        st.image(scatter_plot_file)
    else:
        st.warning(f"Gr√°fico de Dispers√£o do {model_name} n√£o encontrado.")
    
    st.subheader("Relat√≥rio de Classifica√ß√£o")
    st.text(metrics_text)

# √Årvore de Decis√£o
with model_tabs[0]:
    display_model_results(
        "√Årvore de Decis√£o",
        os.path.join(OUTPUT_DIR, "confusion_matrix.png"),
        os.path.join(OUTPUT_DIR, "decision_tree_scatter_plot.png"),
        "Relat√≥rio gerado no treinamento da √Årvore de Decis√£o."
    )

# SVM
with model_tabs[1]:
    display_model_results(
        "SVM",
        os.path.join(OUTPUT_DIR, "svm_confusion_matrix.png"),
        os.path.join(OUTPUT_DIR, "svm_scatter_plot.png"),
        "Relat√≥rio gerado no treinamento do SVM."
    )

# CNN
with model_tabs[2]:
    display_model_results(
        "CNN",
        os.path.join(OUTPUT_DIR, "confusion_matrix_cnn.png"),
        os.path.join(OUTPUT_DIR, "cnn_scatter_plot.png"),
        "Relat√≥rio gerado na avalia√ß√£o do modelo CNN."
    )
